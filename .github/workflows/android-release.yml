name: Android Workflow Validation

on:
  workflow_dispatch:
    inputs:
      release_body:
        description: 'Optional release notes to include in the GitHub release.'
        required: false
        default: ''
      draft:
        description: 'Create the GitHub release as a draft when set to true.'
        required: false
        default: 'false'
      prerelease:
        description: 'Mark the GitHub release as a prerelease when set to true.'
        required: false
        default: 'false'
  release:
    types: [published]

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Determine release metadata
        id: release_metadata
        run: |
          version=$(grep '^version:' pubspec.yaml | head -n1 | awk '{print $2}')
          if [ -z "$version" ]; then
            echo "Unable to determine version from pubspec.yaml" >&2
            exit 1
          fi

          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "tag_name=v$version" >> "$GITHUB_OUTPUT"
          echo "release_name=Release v$version" >> "$GITHUB_OUTPUT"

      - name: Rehydrate launcher icons
        run: |
          flutter create --platforms android --project-name tmp_icon_app tmp_icons
          cp -R tmp_icons/android/app/src/main/res/mipmap-* android/app/src/main/res/
          rm -rf tmp_icons

      - name: Build universal release APK
        run: flutter build apk --release

      - name: Upload universal APK as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-universal-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload universal APK to GitHub release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk

      - name: Create GitHub release with APK
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: ${{ steps.release_metadata.outputs.tag_name }}
          name: ${{ steps.release_metadata.outputs.release_name }}
          body: ${{ github.event.inputs.release_body }}
          draft: ${{ github.event.inputs.draft == 'true' }}
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
